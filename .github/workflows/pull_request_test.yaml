name: Rspec_test

on:
  pull_request:
    branches:
      - main # main ブランチへのプルリクエスト時に実行

jobs:
  test:
    runs-on: ubuntu-latest # ジョブは最新のUbuntuランナー上で実行される
    env:
      RAILS_ENV: test # 環境変数RAILS_ENVをtestに設定
      STORM_GLASS_API_KEY: ${{secrets.STORM_GLASS_API_KEY}}
      LINE_MESSAGE_API_KEY: ${{secrets.LINE_MESSAGE_API_KEY}}

    steps:
      - uses: actions/checkout@v2 # リポジトリのコードをチェックアウト

      # Docker Compose を使ってサービスをデタッチドモードで起動
      - name: Set up Docker Compose
        run: |
          docker-compose -f docker-compose.test.yml up -d

      # Docker-compose ps でサービスの状態を確認
      - name: Check Docker Compose
        run: docker-compose -f docker-compose.test.yml ps

      # master.key を作成
      - name: Create master.key
        run: echo ${{secrets.RAILS_MASTER_KEY}} > config/master.key

      # データベースマイグレーションを実行
      - name: Prepare database
        run: docker-compose exec -T app bundle exec rails db:migrate

      # RSpecを使ってテストを実行
      - name: Run tests
        run: |
          docker-compose exec -T app bundle exec rspec

      # サービスの状態を確認し、ログを出力する
      - name: Output Docker Compose logs
        if: failure() # ステップが失敗した後で実行
        run: docker-compose logs

      # すべてのサービスをシャットダウン
      - name: Shutdown
        run: docker-compose down
